<script>
    var map;
    var otherListingsMap;
    var infowindow;
    var panorama;

    function initMap() {
        initSurroundingsMap();
        initOtherListingsMap();
        initStreetView();
    }

    function initOtherListingsMap() {
        let listingLocation = {lat: <%= @listing.latitude %>, lng: <%= @listing.longitude %>};

        otherListingsMap = new google.maps.Map(document.getElementById('detail-map'), {
            center: listingLocation,
            zoom: 17,
            mapTypeId: 'satellite',
            streetViewControl: false
        });

        infowindow = new google.maps.InfoWindow();

        createMarkerFromLatLong(otherListingsMap, listingLocation);

        $("body").on("shown.bs.tab", "#map-tab", function () {
            google.maps.event.trigger(otherListingsMap, 'resize');
        });
    }

    function initSurroundingsMap() {
        let listingLocation = {lat: <%= @listing.latitude %>, lng: <%= @listing.longitude %>};

        map = new google.maps.Map(document.getElementById('surroundings-map'), {
            center: listingLocation,
            zoom: 17,
            mapTypeControl: false,
            streetViewControl: false
        });

        createMarkerFromLatLong(map, listingLocation);

        infowindow = new google.maps.InfoWindow();


        let service = new google.maps.places.PlacesService(map);
        service.nearbySearch({
            location: listingLocation,
            radius: 500,
            type: ['restaurant']
        }, restuarantCallback);

        service.nearbySearch({
            location: listingLocation,
            radius: 500,
            type: ['bakery']
        }, groceriesCallback);

        service.nearbySearch({
            location: listingLocation,
            radius: 500,
            type: ['night_club']
        }, nightLifeCallback);

        service.nearbySearch({
            location: listingLocation,
            radius: 500,
            type: ['cafe']
        }, cafesCallback);

        service.nearbySearch({
            location: listingLocation,
            radius: 500,
            type: ['store']
        }, shopsCallback);

        service.nearbySearch({
            location: listingLocation,
            radius: 500,
            type: ['art_gallery']
        }, artAndEntertainmentsCallback);

        service.nearbySearch({
            location: listingLocation,
            radius: 500,
            type: ['spa']
        }, beautyAndSpasCallback);

        service.nearbySearch({
            location: listingLocation,
            radius: 500,
            type: ['gym']
        }, activeLifeCallback);

        service.nearbySearch({
            location: listingLocation,
            radius: 500,
            type: ['school']
        }, schoolsCallback);


    }

    function initStreetView() {
        panorama = new google.maps.StreetViewPanorama(
            document.getElementById('street-view-container'),
            {
                position: {lat: <%= @listing.latitude %>, lng: <%= @listing.longitude %>},
                pov: {heading: 60, pitch: 0},
                zoom: 1
            });

        $("body").on("shown.bs.tab", "#street_view_tab", function () {
            google.maps.event.trigger(panorama, 'resize');
        });
    }

    function restuarantCallback(results, status) {
        $("#restaurant-count").text(results.length);
        if (status === google.maps.places.PlacesServiceStatus.OK) {
            for (let i = 0; i < results.length; i++) {
                //createMarker(results[i]);
                $("#restaurant-list").append(results[i].name + ", ");
            }
        }
    }

    function groceriesCallback(results, status) {
        $("#groceries-count").text(results.length);
        if (status === google.maps.places.PlacesServiceStatus.OK) {
            for (let i = 0; i < results.length; i++) {
                //createMarker(results[i]);
                $("#groceries-list").append(results[i].name + ", ");
            }
        }
    }

    function nightLifeCallback(results, status) {
        $("#night-life-count").text(results.length);
        if (status === google.maps.places.PlacesServiceStatus.OK) {
            for (let i = 0; i < results.length; i++) {
                //createMarker(results[i]);
                $("#night-life-list").append(results[i].name + ", ");
            }
        }
    }

    function cafesCallback(results, status) {
        $("#cafes-count").text(results.length);
        if (status === google.maps.places.PlacesServiceStatus.OK) {
            for (let i = 0; i < results.length; i++) {
                //createMarker(results[i]);
                $("#cafes-list").append(results[i].name + ", ");
            }
        }
    }

    function shopsCallback(results, status) {
        $("#shops-count").text(results.length);
        if (status === google.maps.places.PlacesServiceStatus.OK) {
            for (let i = 0; i < results.length; i++) {
                //createMarker(results[i]);
                $("#shops-list").append(results[i].name + ", ");
            }
        }
    }

    function artAndEntertainmentsCallback(results, status) {
        $("#arts-and-entertainment-count").text(results.length);
        if (status === google.maps.places.PlacesServiceStatus.OK) {
            for (let i = 0; i < results.length; i++) {
                //createMarker(results[i]);
                $("#arts-and-entertainment-list").append(results[i].name + ", ");
            }
        }
    }

    function beautyAndSpasCallback(results, status) {
        $("#beauty-and-spas-count").text(results.length);
        if (status === google.maps.places.PlacesServiceStatus.OK) {
            for (let i = 0; i < results.length; i++) {
                //createMarker(results[i]);
                $("#beauty-and-spas-list").append(results[i].name + ", ");
            }
        }
    }

    function activeLifeCallback(results, status) {
        $("#active-life-count").text(results.length);
        if (status === google.maps.places.PlacesServiceStatus.OK) {
            for (let i = 0; i < results.length; i++) {
                //createMarker(results[i]);
                $("#active-life-list").append(results[i].name + ", ");
            }
        }
    }

    function schoolsCallback(results, status) {
        $("#schools-count").text(results.length);
        if (status === google.maps.places.PlacesServiceStatus.OK) {
            for (let i = 0; i < results.length; i++) {
                $("#schools-list").append(`
                        <tr>
                          <td> ${results[i].name} </td>
                          <td> ${results[i].rating} </td>
                          <td> 1.2 km </td>
                        </tr>
                `);
            }
        }
    }



    function createMarker(place) {
        let placeLoc = place.geometry.location;
        let marker = new google.maps.Marker({
            map: map,
            position: place.geometry.location
        });

        google.maps.event.addListener(marker, 'click', function() {
            infowindow.setContent(place.name);
            infowindow.open(map, this);
        });
    }

    function createMarkerFromLatLong(map, latLong) {
        console.log(map);
        console.log(latLong);
        let marker = new google.maps.Marker({
            map: map,
            position: latLong
        });

        google.maps.event.addListener(marker, 'click', function() {
            infowindow.setContent("<%= @listing.listing_name %>");
            infowindow.open(map, this);
        });
    }
</script>

<script async defer
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBrRvrsJS76i6RqSHHJif6wlq1cY93Ynm0&libraries=places&callback=initMap">
</script>